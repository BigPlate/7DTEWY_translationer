#include <iostream>

using namespace std;

int main()
{
    // 이것은 파보나치 암호를 해석해내는 프로그램이다.
    // 삘받아서 만든다. 말리지 마라. 발적화도 신경 안쓴다!
    // 모티브 게임 : 7 DAYS TO END WITH YOU
    
    // 입력을 받는다. 먼저 글자의 길이를 파악하고 각각의 배열에 집어넣는다.
    string strr;
    cin >> strr ;
    
    int strr_length = strr.length() ; // 입력을 받았고, 배열 선언까지 했다!
    string strr_chars[strr.length()+5]; // 
    // char strr_finalchar[strr.length()+5];
    
    int each_string_order[strr.length()+5];
    
    
    
    for (int i=0;i<strr_length;i++) {
        strr_chars[i] = strr.substr(i, 1);
        // cout << strr_chars[i];
    }
    // 여기까지. 입력받은 문자 그대로 출력한다. 단 띄어쓰기와 줄바꿈 구분은 불가능하다.
    // 이제 입력받은 문자를 번역해낸다. 
    // 알파벳 번호에 해당하는 문자. 일명 "7dtewy 언어"의 26개의 철자는 다음과 같다.
    //  [ 웅 무 뭄 더 여 프 습 등 곤 암 음 뭄 갈 린 룸 단 디 업 공 멈 큪 놀 악 금 빅 캇 ] 
    // 뭔 특수기호가 있는데, 거기다 이름을 붙인 것이다.
    // 이걸 boyle 작명본이라고 부른다.
    
    string boyle[] = { "a", "b", "c", "d", "e", "f", "g", "h", "i", "j","k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" }; 
    string alpha[] = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J","K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }; 
    // 첫번째 글자를 그냥 a라고 생각하는 거다. 실제로는 누워서 하품하는 친구같이 생긴 기호다.
    // boyle 작명본으로 입력하는데 문제가 있어서 알파벳으로 모두 입력하였다. 막일도 이런 막일이 없다22222.
    
    // 2중 for문을 사용하여 각각의 글자를 대응해서 비교할 것이다.
    // 한 문자당 최대 26번 반복을 해줘야 하므로, 최대 비교횟수는 (원문 글자수 * 26 이다.)
    
    for (int i=0;i<strr_length;i++) { // 각각 몇번째글자인지 확인하여 해당 글자를 대체하고 값을 매긴다.
        // i(+1)번째 글자가 감정을 받습니다.
        // cout << i+1 << " 번째 글자가 감정을 받습니다!";
        for (int j=0;j<26;j++) {
            // 26개의 알파벳 낱글자와 비교를 당하네요.
            if ( strr_chars[i] == boyle[j] ) {
                each_string_order[i] = j ;
                // cout << each_string_order[i] ;
            }
        }
    }
    
    // 값 다 매겼으면, 이제 값에 따라 각각의 글자를 출력해야지?
    // 일단 키를 찾는 부분을 만드는건 미뤄두고, 0~26. 총 27번의 출력을 어거지로 해내면서 그중에 알아서 하나 찾는다.
    // 코딩은 멀고도 험한 법, 아자아자 화이자!
    
    // 우리의 영원한 친구 2중 for문의 영원한 친구 3중 for문이다.
    // 26번. 글자번호를 i(0~25)씩 올려쳐주는데 쓰이는 반복문 하나, 올려진 글자번호를 다시 계산해서 출력하고 줄바꿈해주는 반복문 하나.
    
    for (int i=0;i<26;i++) {
        for (int j=0;j<strr_length;j++) {
            each_string_order[j] += 1;
            if ( each_string_order[j] == 26 ) {
                each_string_order[j] = 0;  // 모든 글자에 i만큼 더해주고, 혹여나 26+a(단 a는 a>0인 자연수)번째 알파벳이 지목당하면 26을 빼준다.
            }
            cout << alpha[ each_string_order[j] ];
            
            
            //cout << each_string_order[j]; // 숫자로 출력하면 이렇다.
            //아스키 코드를 쓰고 싶은데 더럽게 귀찮으므로 그냥 ABCD 이렇게 만든다
        }
        cout << '\n';
    }
}
